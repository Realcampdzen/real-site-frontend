// Glass UI –•–∏–ø—ã—á - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π AI –ø–æ–º–æ—â–Ω–∏–∫ —Å glassmorphism –¥–∏–∑–∞–π–Ω–æ–º
class GlassUIHipych {
    constructor() {
        this.name = "–•–∏–ø—ã—á";
        this.avatar = "images/hipych-avatar.jpg";
        this.theme = "#3b82f6";
        this.isVisible = false;
        
        this.responses = [
            "–ü—Ä–∏–≤–µ—Ç! –Ø –•–∏–ø—ã—á - —Ç–≤–æ–π —Å—Ç—Ä–∏–º–µ—Ä—Å–∫–∏–π –∞–¥–º–∏–Ω! üé•‚ú®",
            "–ü–æ–º–æ–≥—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π —Å—Ç—Ä–∏–º–∞ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏! üîß",
            "–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å OBS? –Ø –∑–Ω–∞—é –≤—Å–µ —Å–µ–∫—Ä–µ—Ç—ã! üìπ",
            "–î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º —Ç–≤–æ–π –∫–∞–Ω–∞–ª –Ω–∞ –º–∞–∫—Å–∏–º—É–º! üöÄ",
            "–ü—Ä–æ–±–ª–µ–º—ã —Å –∂–µ–ª–µ–∑–æ–º? –†–∞—Å—Å–∫–∞–∂–∏, —Ä–∞–∑–±–µ—Ä–µ–º—Å—è! üíª",
            "–Ø –ø–æ–º–æ–≥—É –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–≤–æ–π —Å—Ç—Ä–∏–º –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞! ‚ö°",
            "–•–æ—á–µ—à—å –±–æ–ª—å—à–µ –∑—Ä–∏—Ç–µ–ª–µ–π? –ü–æ–¥–µ–ª—é—Å—å —Ñ–∏—à–∫–∞–º–∏! üìà",
            "–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7 - —ç—Ç–æ –ø—Ä–æ –º–µ–Ω—è! üõ†Ô∏è",
            "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ–Ω–∞—Ç–æ–≤, –∞–ª–µ—Ä—Ç–æ–≤, –±–æ—Ç–æ–≤ - –≤—Å–µ —É–º–µ—é! üí∞",
            "–í–º–µ—Å—Ç–µ —Å–¥–µ–ª–∞–µ–º —Ç–≤–æ–π —Å—Ç—Ä–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º! üé¨"
        ];
        
        this.init();
    }

    init() {
        this.createFloatingButton();
        this.createChatWidget();
    }

    createFloatingButton() {
        // –°–æ–∑–¥–∞–µ–º –ø–ª–∞–≤–∞—é—â—É—é –∫–Ω–æ–ø–∫—É —Å Glass UI —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏
        this.floatingButton = document.createElement('div');
        this.floatingButton.className = 'glass-ui-hipych-button';
        this.floatingButton.style.cssText = `
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 70px;
            height: 70px;
            background: linear-gradient(135deg, ${this.theme}dd, ${this.theme});
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border-radius: 50%;
            border: 2px solid rgba(255, 255, 255, 0.3);
            box-shadow: 
                0 15px 35px rgba(59, 130, 246, 0.4),
                inset 0 2px 0 rgba(255, 255, 255, 0.3),
                inset 0 -2px 0 rgba(0, 0, 0, 0.1);
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 1002;
            overflow: hidden;
            animation: glassFloat 4s ease-in-out infinite;
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω
        const buttonBg = document.createElement('div');
        buttonBg.style.cssText = `
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            animation: buttonShine 3s ease-in-out infinite;
            border-radius: 50%;
        `;
        this.floatingButton.appendChild(buttonBg);

        // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä
        if (this.avatar) {
            const avatarImg = document.createElement('img');
            avatarImg.src = this.avatar;
            avatarImg.alt = this.name;
            avatarImg.style.cssText = `
                width: 50px;
                height: 50px;
                border-radius: 50%;
                object-fit: cover;
                position: relative;
                z-index: 1;
                border: 2px solid rgba(255, 255, 255, 0.5);
            `;
            this.floatingButton.appendChild(avatarImg);
        } else {
            const icon = document.createElement('div');
            icon.innerHTML = 'ü§ñ';
            icon.style.cssText = `
                font-size: 32px;
                position: relative;
                z-index: 1;
            `;
            this.floatingButton.appendChild(icon);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        const notificationBadge = document.createElement('div');
        notificationBadge.className = 'glass-notification-badge';
        notificationBadge.style.cssText = `
            position: absolute;
            top: -5px;
            right: -5px;
            width: 20px;
            height: 20px;
            background: linear-gradient(135deg, #10b981, #059669);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 10px;
            font-weight: bold;
            color: white;
            border: 2px solid rgba(255, 255, 255, 0.8);
            animation: badgePulse 2s infinite;
        `;
        notificationBadge.textContent = '!';
        this.floatingButton.appendChild(notificationBadge);

        // –î–æ–±–∞–≤–ª—è–µ–º hover —ç—Ñ—Ñ–µ–∫—Ç—ã
        this.floatingButton.addEventListener('mouseenter', () => {
            this.floatingButton.style.transform = 'scale(1.15) rotate(5deg)';
            this.floatingButton.style.boxShadow = `
                0 25px 50px rgba(59, 130, 246, 0.6),
                inset 0 2px 0 rgba(255, 255, 255, 0.4),
                inset 0 -2px 0 rgba(0, 0, 0, 0.2)
            `;
        });

        this.floatingButton.addEventListener('mouseleave', () => {
            this.floatingButton.style.transform = 'scale(1) rotate(0deg)';
            this.floatingButton.style.boxShadow = `
                0 15px 35px rgba(59, 130, 246, 0.4),
                inset 0 2px 0 rgba(255, 255, 255, 0.3),
                inset 0 -2px 0 rgba(0, 0, 0, 0.1)
            `;
        });

        this.floatingButton.addEventListener('click', () => {
            this.toggleChat();
        });

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –∞–Ω–∏–º–∞—Ü–∏–π
        this.addGlassUIStyles();

        document.body.appendChild(this.floatingButton);
    }

    createChatWidget() {
        console.log('%cü§ñ –°–æ–∑–¥–∞–Ω–∏–µ —á–∞—Ç-–≤–∏–¥–∂–µ—Ç–∞ –•–∏–ø—ã—á–∞...', 'color: #3b82f6; font-weight: bold;');
        
        this.chatWidget = new GlassUIWidget({
            botName: this.name,
            botAvatar: this.avatar,
            theme: this.theme,
            position: { bottom: '100px', right: '20px' },
            onSendMessage: (message) => this.handleMessage(message),
            onClose: () => this.hideChat(),
            isVisible: false
        });
        
        console.log('%c‚úÖ –ß–∞—Ç-–≤–∏–¥–∂–µ—Ç –•–∏–ø—ã—á–∞ —Å–æ–∑–¥–∞–Ω —Å –ø–æ–∑–∏—Ü–∏–µ–π: bottom: 100px, right: 20px', 'color: #10b981;');
    }

    addGlassUIStyles() {
        const styles = `
            @keyframes glassFloat {
                0%, 100% { 
                    transform: translateY(0px) rotate(0deg);
                    filter: hue-rotate(0deg);
                }
                25% { 
                    transform: translateY(-8px) rotate(2deg);
                    filter: hue-rotate(5deg);
                }
                50% { 
                    transform: translateY(-5px) rotate(-1deg);
                    filter: hue-rotate(10deg);
                }
                75% { 
                    transform: translateY(-10px) rotate(1deg);
                    filter: hue-rotate(5deg);
                }
            }

            @keyframes buttonShine {
                0%, 100% { 
                    transform: translateX(-100%) rotate(45deg);
                    opacity: 0;
                }
                50% { 
                    transform: translateX(100%) rotate(45deg);
                    opacity: 1;
                }
            }

            @keyframes badgePulse {
                0%, 100% { 
                    transform: scale(1);
                    box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7);
                }
                50% { 
                    transform: scale(1.2);
                    box-shadow: 0 0 0 8px rgba(16, 185, 129, 0);
                }
            }

            .glass-ui-hipych-button::before {
                content: '';
                position: absolute;
                top: -2px;
                left: -2px;
                right: -2px;
                bottom: -2px;
                background: linear-gradient(45deg, ${this.theme}, transparent, ${this.theme});
                border-radius: 50%;
                z-index: -1;
                animation: borderRotate 4s linear infinite;
            }

            @keyframes borderRotate {
                from { transform: rotate(0deg); }
                to { transform: rotate(360deg); }
            }
        `;

        const styleSheet = document.createElement('style');
        styleSheet.textContent = styles;
        document.head.appendChild(styleSheet);
    }

    async handleMessage(message) {
        // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏
        await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç
        const response = this.responses[Math.floor(Math.random() * this.responses.length)];
        return response;
    }

    showChat() {
        console.log('%cü§ñ –•–∏–ø—ã—á: showChat() –≤—ã–∑–≤–∞–Ω', 'color: #3b82f6; font-weight: bold;');
        
        this.isVisible = true;
        this.chatWidget.show();
        
        // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const badge = this.floatingButton.querySelector('.glass-notification-badge');
        if (badge) {
            badge.style.display = 'none';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        this.floatingButton.style.background = `linear-gradient(135deg, ${this.theme}, ${this.theme}cc)`;
        
        console.log('%c‚úÖ –•–∏–ø—ã—á: —á–∞—Ç –ø–æ–∫–∞–∑–∞–Ω', 'color: #10b981; font-weight: bold;');
    }

    hideChat() {
        console.log('%cü§ñ –•–∏–ø—ã—á: hideChat() –≤—ã–∑–≤–∞–Ω', 'color: #3b82f6; font-weight: bold;');
        
        this.isVisible = false;
        this.chatWidget.hide();
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π –≤–∏–¥ –∫–Ω–æ–ø–∫–∏
        this.floatingButton.style.background = `linear-gradient(135deg, ${this.theme}dd, ${this.theme})`;
        
        console.log('%c‚úÖ –•–∏–ø—ã—á: —á–∞—Ç —Å–∫—Ä—ã—Ç', 'color: #10b981; font-weight: bold;');
    }

    toggleChat() {
        if (this.isVisible) {
            this.hideChat();
        } else {
            this.showChat();
        }
    }

    destroy() {
        if (this.floatingButton && this.floatingButton.parentNode) {
            this.floatingButton.parentNode.removeChild(this.floatingButton);
        }
        if (this.chatWidget) {
            this.chatWidget.destroy();
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Glass UI –•–∏–ø—ã—á–∞
function initGlassUIHipych() {
    if (!window.glassUIHipych) {
        window.glassUIHipych = new GlassUIHipych();
        
        console.log('%cü§ñ Glass UI –•–∏–ø—ã—á –∑–∞–≥—Ä—É–∂–µ–Ω!', 'color: #3b82f6; font-size: 16px; font-weight: bold;');
        console.log('%c‚ú® Glassmorphism —ç—Ñ—Ñ–µ–∫—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã', 'color: #10b981; font-size: 12px;');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ä–∞–∑—É –µ—Å–ª–∏ DOM –≥–æ—Ç–æ–≤, –∏–ª–∏ –∂–¥–µ–º —Å–æ–±—ã—Ç–∏—è
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initGlassUIHipych);
} else {
    // DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ä–∞–∑—É
    initGlassUIHipych();
} 